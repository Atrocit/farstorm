import { defineConfig, globalIgnores } from 'eslint/config';
import globals from 'globals';
import tsParser from '@typescript-eslint/parser';
import typescriptEslint from '@typescript-eslint/eslint-plugin';
import stylistic from '@stylistic/eslint-plugin';

export default defineConfig([ {
	languageOptions: {
		globals: {
			...globals.browser,
			...globals.commonjs,
			...globals.node,
			...globals.jest,
		},
		
		parser: tsParser,
		sourceType: "module",
		ecmaVersion: 2023,
		
		parserOptions: {
			ecmaFeatures: {
				modules: true,
			},
		},
	},
	
	files: [ '**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx' ],
	
	plugins: {
		"@typescript-eslint": typescriptEslint,
		'@stylistic': stylistic,
	},
	
	rules: {
		// Force tab indentation
		"@stylistic/indent": [ 'error', 'tab' ],
		
		// Stylistic, spacing and such
		"@stylistic/array-bracket-newline": [ "error", "consistent" ],
		"@stylistic/array-bracket-spacing": [ "error", "always" ],
		"@stylistic/arrow-spacing": [ "error", { before: true, after: true } ],
		"@stylistic/block-spacing": "error",
		"@stylistic/brace-style": [ "error", "1tbs", { allowSingleLine: true } ],
		"@stylistic/comma-dangle": [ "error", "always-multiline" ],
		"@stylistic/comma-spacing": [ "error", { before: false,	after: true } ],
		"@stylistic/comma-style": [ "error", "last" ],
		"@stylistic/computed-property-spacing": [ "error", "never" ],
		"@stylistic/dot-location": [ "error", "property" ],
		"@stylistic/function-call-argument-newline": [ "error", "consistent" ],
		"@stylistic/function-call-spacing": [ "error", "never" ],
		"@stylistic/function-paren-newline": [ "error", "consistent" ],
		"@stylistic/implicit-arrow-linebreak": [ "error", "beside" ],
		"@stylistic/key-spacing": [ "error", { beforeColon: false, afterColon: true, mode: "strict" } ],
		"@stylistic/keyword-spacing": [ "error", { before: true, after: true } ],
		"@stylistic/new-parens": "error",
		"@stylistic/no-floating-decimal": [ "error" ],
		"@stylistic/no-mixed-spaces-and-tabs": [ "error", "smart-tabs" ],
		"@stylistic/no-multi-spaces": [ "error", { ignoreEOLComments: true } ],
		"@stylistic/no-trailing-spaces": [ "error", { skipBlankLines: true, ignoreComments: true } ],
		"@stylistic/no-whitespace-before-property": "error",
		"@stylistic/nonblock-statement-body-position": [ "error", "beside" ],
		"@stylistic/object-curly-spacing": [ "error", "always" ],
		"@stylistic/rest-spread-spacing": [ "error", "never" ],
		"@stylistic/semi": [ "error", "always" ],
		"@stylistic/semi-spacing": [ "error", { before: false, after: true } ],
		"@stylistic/semi-style": [ "error", "last" ],
		"@stylistic/space-before-blocks": "error",
		"@stylistic/space-before-function-paren": [ "error", { named: "never", anonymous: "never", asyncArrow: "always" } ],
		"@stylistic/space-in-parens": [ "error", "never" ],
		"@stylistic/space-infix-ops": "error",
		"@stylistic/space-unary-ops": [ "error", { words: true, nonwords: false } ],
		"@stylistic/template-curly-spacing": [ "error", "never" ],
		"@stylistic/type-annotation-spacing": [ "error", { before: false, after: true, overrides: { arrow: { before: true, after: true } } } ],
		"@stylistic/type-generic-spacing": [ "error" ],
		"@stylistic/wrap-iife": [ "error", "inside" ],
		
		// Problematic code patterns
		"getter-return": "warn",
		"no-class-assign": "warn",
		"no-compare-neg-zero": "error",
		"no-cond-assign": "warn",
		"no-const-assign": "error",
		"no-constant-condition": "error",
		"no-constructor-return": "error",
		"no-control-regex": "error",
		"no-debugger": "error",
		"no-dupe-args": "error",
		"no-dupe-class-members": "error",
		"no-dupe-else-if": "error",
		"no-dupe-keys": "error",
		"no-duplicate-case": "error",
		"no-duplicate-imports": "warn",
		"no-empty-character-class": "warn",
		"no-empty-pattern": "warn",
		"no-ex-assign": "error",
		"no-fallthrough": "off",
		"no-func-assign": "error",
		"no-import-assign": "error",
		"no-invalid-regexp": "warn",
		"no-irregular-whitespace": "error",
		"no-loss-of-precision": "error",
		"no-misleading-character-class": "error",
		"no-new-symbol": "error",
		"no-obj-calls": "error",
		"no-promise-executor-return": "warn",
		"no-prototype-builtins": "error",
		"no-self-assign": "error",
		"no-self-compare": "warn",
		"no-setter-return": "error",
		"no-template-curly-in-string": "warn",
		"no-this-before-super": "error",
		"no-undef": "error",
		"no-unexpected-multiline": "error",
		"no-unreachable": "warn",
		"no-unreachable-loop": "warn",
		"no-unsafe-finally": "error",
		"no-unsafe-negation": "error",
		"no-unsafe-optional-chaining": "error",
		"no-unused-private-class-members": "warn",
		"no-useless-backreference": "warn",
		// "require-atomic-updates": "warn",
		"use-isnan": "error",
		"valid-typeof": "error",
		"eqeqeq": "off",
		"new-cap": "warn",
		"no-alert": "error",
		"no-bitwise": "warn",
		"no-caller": "warn",
		"no-console": "warn",
		"no-delete-var": "warn",
		"no-empty": "error",
		"no-eq-null": "off",
		"no-eval": "error",
		"no-extend-native": "error",
		"no-extra-bind": "warn",
		"no-extra-semi": "error",
		"no-floating-decimal": "warn",
		"no-global-assign": "error",
		"no-implicit-globals": "error",
		"no-implied-eval": "error",
		"no-invalid-this": "error",
		"no-iterator": "error",
		"no-label-var": "error",
		"no-labels": "error",
		"no-lone-blocks": "error",
		// "no-loop-func": "error",
		"no-mixed-operators": "warn",
		"no-multi-assign": "error",
		"no-nested-ternary": "warn",
		"no-new": "error",
		"no-new-func": "warn",
		"no-new-object": "error",
		"no-new-wrappers": "warn",
		"no-nonoctal-decimal-escape": "error",
		"no-octal": "error",
		"no-octal-escape": "error",
		"no-param-reassign": "error",
		"no-proto": "error",
		"no-redeclare": "error",
		"no-regex-spaces": "error",
		"no-restricted-exports": "error",
		"no-restricted-globals": "error",
		"no-restricted-imports": "error",
		"no-restricted-properties": "error",
		"no-restricted-syntax": "error",
		"no-return-assign": "error",
		"no-script-url": "warn",
		"no-sequences": "error",
		"no-throw-literal": "warn",
		"no-undef-init": "error",
		"no-unneeded-ternary": "warn",
		"no-unused-expressions": "warn",
		"no-unused-labels": "warn",
		"no-useless-call": "error",
		"no-useless-catch": "error",
		"no-useless-computed-key": "warn",
		"no-useless-concat": "warn",
		"no-useless-constructor": "warn",
		"no-useless-escape": "error",
		"no-useless-rename": "error",
		"no-useless-return": "warn",
		"no-var": "error",
		"no-void": "error",
		"no-with": "error",
		"prefer-const": "warn",
		"prefer-object-spread": "warn",
		"prefer-rest-params": "error",
		"prefer-spread": "warn",
		"radix": [ "error", "always" ],
		"yoda": "error",
	},
}, globalIgnores([ "**/node_modules", "**/build", "**/*.codegen.ts" ]) ]);
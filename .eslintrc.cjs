module.exports = {
	root: true,
	parser: '@typescript-eslint/parser',
	extends: [
		'plugin:import/errors',
		'plugin:import/warnings',
		'plugin:import/typescript',
	],
	parserOptions: {
		ecmaVersion: 2022,
		sourceType: 'module',
		ecmaFeatures: {
			modules: true,
		},
	},
	plugins: [
		'@typescript-eslint',
		'jest',
	],
	"env": {
		node: true,
		es2022: true,
		"jest/globals": true,
	},
	settings: {
		node: {
			tryExtensions: [ '.js', '.json' ],
		},
		'import/resolver': {
			typescript: {},
		},
	},
	rules: {
		'@typescript-eslint/no-var-requires': 'error',

		'import/no-unresolved': 'error',
		'import/no-commonjs': 'error',
		'import/no-nodejs-modules': 'error',
		'import/named': 'error',
		'import/default': 'error',
		'import/namespace': 'error',
		'import/export': 'error',
		'import/extensions': [
			'error',
			'ignorePackages',
			{
				'ts': 'never',
				'tsx': 'never',
				'jsx': 'never',
				'js': 'never',
			},
		],


		'indent': [
			'error',
			'tab', {
				"ignoredNodes": [
					`FunctionExpression > .params[decorators.length > 0]`,
					`FunctionExpression > .params > :matches(Decorator, :not(:first-child))`,
					`ClassBody.body > PropertyDefinition[decorators.length > 0] > .key`,
				],
			},
		],

		'array-bracket-spacing': [ 'error', 'always' ],
		'array-callback-return': 'warn',
		'arrow-spacing': [ 'error', { before: true, after: true } ],
		'block-spacing': 'error',
		'brace-style': [ 'error', '1tbs', { allowSingleLine: true } ],
		'comma-dangle': [ 'error', 'always-multiline' ],
		'comma-spacing': [ 'error', { before: false, after: true } ],
		'comma-style': [ 'error', 'last' ],
		'computed-property-spacing': [ 'error', 'never' ],
		'dot-location': [ 'error', 'property' ],
		'func-call-spacing': [ 'error', 'never' ],
		'implicit-arrow-linebreak': [ 'error', 'beside' ],
		'key-spacing': [ 'error', { beforeColon: false, afterColon: true, mode: 'strict' } ],
		'new-parens': 'error',
		'no-mixed-spaces-and-tabs': [ 'error', 'smart-tabs' ],
		'no-multi-spaces': [ 'error', { ignoreEOLComments: true } ],
		'no-trailing-spaces': 'error',
		'no-whitespace-before-property': 'error',
		'nonblock-statement-body-position': [ 'error', 'beside' ],
		'object-curly-spacing': [ 'error', 'always' ],
		'rest-spread-spacing': [ 'error', 'never' ],
		'semi': [ 'error', 'always' ],
		'semi-spacing': [ 'error', { before: false, after: true } ],
		'semi-style': [ 'error', 'last' ],
		'space-before-blocks': 'error',
		'space-before-function-paren': [ 'error', { anonymous: 'never', named: 'never', asyncArrow: 'always' } ],
		'space-in-parens': [ 'error', 'never' ],
		'space-infix-ops': 'error',
		'space-unary-ops': [ 'error', { words: true, nonwords: false } ],
		'template-curly-spacing': [ 'error', 'never' ],
		'wrap-iife': [ 'error', 'inside' ],

		'getter-return': 'warn',
		'no-class-assign': 'warn',
		'no-compare-neg-zero': 'error',
		'no-cond-assign': 'warn',
		'no-const-assign': 'error',
		'no-constant-condition': 'error',
		'no-constructor-return': 'error',
		'no-control-regex': 'error',
		'no-debugger': 'error',
		'no-dupe-args': 'error',
		'no-dupe-class-members': 'error',
		'no-dupe-else-if': 'error',
		'no-dupe-keys': 'error',
		'no-duplicate-case': 'error',
		'no-duplicate-imports': 'warn',
		'no-empty-character-class': 'warn',
		'no-empty-pattern': 'warn',
		'no-ex-assign': 'error',
		'no-fallthrough': 'off',
		'no-func-assign': 'error',
		'no-import-assign': 'error',
		'no-invalid-regexp': 'warn',
		'no-irregular-whitespace': 'error',
		'no-loss-of-precision': 'error',
		'no-misleading-character-class': 'error',
		'no-new-symbol': 'error',
		'no-obj-calls': 'error',
		'no-promise-executor-return': 'off',
		'no-prototype-builtins': 'error',
		'no-self-assign': 'error',
		'no-self-compare': 'warn',
		'no-setter-return': 'error',
		'no-template-curly-in-string': 'warn',
		'no-this-before-super': 'error',
		'no-undef': 'error',
		'no-unexpected-multiline': 'error',
		'no-unreachable': 'warn',
		'no-unreachable-loop': 'warn',
		'no-unsafe-finally': 'error',
		'no-unsafe-negation': 'error',
		'no-unsafe-optional-chaining': 'error',
		'no-unused-private-class-members': 'warn',
		// 'no-unused-vars': 'warn', // This is just annoying, we'll let IntelliJ take the wheel on this one
		// 'no-use-before-define': 'error',
		'no-useless-backreference': 'warn',
		'use-isnan': 'error',
		'valid-typeof': 'error',

		'eqeqeq': 'off',
		// 'new-cap': 'warn', // Turned off because PascalCase should be allowed for decorators too
		'no-alert': 'error',
		'no-bitwise': 'warn',
		'no-caller': 'warn',
		'no-console': 'error',  // Use proper error emitting instead
		'no-delete-var': 'warn',
		'no-empty': 'error',
		'no-eq-null': 'off',
		'no-eval': 'error',
		'no-extend-native': 'error',
		'no-extra-bind': 'warn',
		'no-extra-semi': 'error',
		'no-floating-decimal': 'warn',
		'no-global-assign': 'error',
		'no-implicit-globals': 'error',
		'no-implied-eval': 'error',
		'no-invalid-this': 'error',
		'no-iterator': 'error',
		'no-label-var': 'error',
		'no-labels': 'error',
		'no-lone-blocks': 'error',
		//		'no-lonely-if': 'error',
		'no-mixed-operators': 'warn',
		'no-multi-assign': 'error',
		'no-nested-ternary': 'warn',
		'no-new': 'error',
		'no-new-func': 'warn',
		'no-new-object': 'error',
		'no-new-wrappers': 'warn',
		'no-nonoctal-decimal-escape': 'error',
		'no-octal': 'error',
		'no-octal-escape': 'error',
		'no-param-reassign': 'error',
		'no-proto': 'error',
		'no-redeclare': 'error',
		'no-regex-spaces': 'error',
		'no-restricted-exports': 'error',
		'no-restricted-globals': 'error',
		'no-restricted-imports': 'error',
		'no-restricted-properties': 'error',
		'no-restricted-syntax': 'error',
		'no-return-assign': 'error',
		'no-return-await': 'error',
		'no-script-url': 'warn',
		'no-sequences': 'error',
		'no-shadow': 'warn',
		'no-throw-literal': 'warn',
		'no-undef-init': 'error',
		'no-unneeded-ternary': 'warn',
		'no-unused-expressions': 'warn',
		'no-unused-labels': 'warn',
		'no-useless-call': 'error',
		'no-useless-catch': 'error',
		'no-useless-computed-key': 'warn',
		'no-useless-concat': 'warn',
		'no-useless-constructor': 'warn',
		'no-useless-escape': 'error',
		'no-useless-rename': 'error',
		'no-useless-return': 'warn',
		'no-var': 'error',
		'no-void': 'error',
		'no-with': 'error',
		'prefer-arrow-callback': 'warn',
		'prefer-const': 'warn',
		'prefer-object-spread': 'warn',
		'prefer-rest-params': 'error',
		'prefer-spread': 'warn',
		'radix': [ 'error', 'always' ],
		'spaced-comment': [ 'error', 'always' ],
		'yoda': 'error',
		'func-name-matching': 'error',
		'no-extra-label': 'error',
	},
};